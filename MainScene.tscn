[gd_scene load_steps=22 format=2]

[ext_resource path="res://Assets/Tiles/Season_collection.png" type="Texture" id=1]
[ext_resource path="res://Assets/pixel.png" type="Texture" id=3]
[ext_resource path="res://Assets/circle.png" type="Texture" id=4]
[ext_resource path="res://Assets/Shaders/EmotionShader.shader" type="Shader" id=5]
[ext_resource path="res://Assets/circumplex.png" type="Texture" id=6]
[ext_resource path="res://Assets/Shaders/HistoryRGBYShader.shader" type="Shader" id=7]
[ext_resource path="res://Assets/Shaders/HistoryMC_SLMShader.shader" type="Shader" id=8]
[ext_resource path="res://Assets/Shaders/HSLShader.shader" type="Shader" id=9]

[sub_resource type="ViewportTexture" id=1]
viewport_path = NodePath("HSLTarget")

[sub_resource type="ViewportTexture" id=2]
viewport_path = NodePath("HistoryTarget")

[sub_resource type="ShaderMaterial" id=3]
resource_local_to_scene = true
shader = ExtResource( 5 )
shader_param/targetArousal = 4.0
shader_param/targetValence = 4.0
shader_param/targetGreenValue = 0.1
shader_param/texHistory = SubResource( 2 )
shader_param/texHSL = SubResource( 1 )

[sub_resource type="ViewportTexture" id=4]
viewport_path = NodePath("DefaultTarget")

[sub_resource type="GDScript" id=5]
script/source = "extends Sprite

onready var emotionUI = get_parent().get_node(\"Panel/emotionColors\")

var MAX_PIXEM_AROUSAL = 8
var MAX_PIXEM_VALENCE = 8
var MIN_PIXEM_AROUSAL = 0
var MIN_PIXEM_VALENCE = 0

func _ready():
	emotionUI.connect(\"_on_emotion_pointer_change\", self, \"onEmotionPointerChanged\")
	pass

func onEmotionPointerChanged(emotionPointer):
	var pixemPointer = circumplexEmotionToPixemEmotion(emotionPointer);
	material.set_shader_param(\"targetValence\", pixemPointer.x)
	material.set_shader_param(\"targetArousal\", pixemPointer.y)
	material.set_shader_param(\"targetGreenValue\", emotionPointer.z)
	pass

func circumplexEmotionToPixemEmotion(circumEmotion):
	var copyEmo = Vector2()
	copyEmo.x = ((circumEmotion.x + 1.0) / 2.0) * (MAX_PIXEM_VALENCE - MIN_PIXEM_VALENCE) + MIN_PIXEM_VALENCE
	copyEmo.y = MAX_PIXEM_AROUSAL - ((circumEmotion.y + 1.0) / 2.0) * (MAX_PIXEM_AROUSAL - MIN_PIXEM_AROUSAL) + MIN_PIXEM_AROUSAL
	print(copyEmo);
	return copyEmo
"

[sub_resource type="GDScript" id=6]
script/source = "extends Sprite

onready var circle = get_node(\"circle\")
onready var lblProp = get_parent().get_node(\"lblProportion\")

var emotionPointer = Vector3(0.0, 0.0, 0.0)
var centeredEP = Vector2()

var EMOTION_CHANGE_SPEED = 1.0

signal _on_emotion_pointer_change(emotion_pointer)

func _ready():
	pass

var gotInput = false

func _process(delta):
	if Input.is_action_pressed(\"emotion_increase_positive\"):
		emotionPointer.x += EMOTION_CHANGE_SPEED * delta
		gotInput = true
	if Input.is_action_pressed(\"emotion_decrease_positive\"):
		gotInput = true
		emotionPointer.x -= EMOTION_CHANGE_SPEED * delta
		gotInput = true
	if Input.is_action_pressed(\"emotion_increase_arousal\"):
		emotionPointer.y -= EMOTION_CHANGE_SPEED * delta
		gotInput = true
	if Input.is_action_pressed(\"emotion_decrease_arousal\"):
		emotionPointer.y += EMOTION_CHANGE_SPEED * delta
		gotInput = true
	if Input.is_action_just_pressed(\"emotion_increase_proportion\"):
		emotionPointer.z += 0.01
		gotInput = true
	if Input.is_action_just_pressed(\"emotion_decrease_proportion\"):
		emotionPointer.z -= 0.01
		gotInput = true
	
	if gotInput:
		gotInput = false
		var pointer = Vector2(emotionPointer.x, emotionPointer.y)
		if pointer.length() > 1:
			pointer = pointer.normalized()
			emotionPointer.x = pointer.x
			emotionPointer.y = pointer.y
		if emotionPointer.z < 0.0 :
			emotionPointer.z = 0.0
		if emotionPointer.z > 1.0:
			emotionPointer.z = 1.0
		lblProp.text = str(emotionPointer.z)
		updateEmotionPointer()
	
	#material.set_shader_param(\"emotionPointer\", centeredEP)
	#material.set_shader_param(\"proportion\", emotionColorProportion)
	#background.material.set_shader_param(\"emotionPointer\", centeredEP)
	#background.material.set_shader_param(\"proportion\", emotionColorProportion)
	pass

func updateEmotionPointer():
	var emotionSize = get_rect().size
	
	# Just for the texture
	emotionSize.x *= 0.6
	emotionSize.y *= 0.8
	
	centeredEP.x = 0.5 + emotionPointer.x * 0.5
	centeredEP.y = 0.5 + emotionPointer.y * 0.5
	
	circle.position = emotionSize * centeredEP - emotionSize / 2.0
	emit_emotion_change()
	pass

func _on_btnExcited_pressed():
	emotionPointer.x = 0.406212
	emotionPointer.y = -0.913779
	updateEmotionPointer()
	pass


func _on_btnDelighted_pressed():
	emotionPointer.x = 0.828616
	emotionPointer.y = -0.559818
	updateEmotionPointer()
	pass


func _on_btnHappy_pressed():
	emotionPointer.x = 0.968924
	emotionPointer.y = -0.247357
	updateEmotionPointer()
	pass


func _on_btnContent_pressed():
	emotionPointer.x = 0.966499
	emotionPointer.y = 0.256671
	updateEmotionPointer()
	pass


func _on_btnCalm_pressed():
	emotionPointer.x = 0.681124
	emotionPointer.y = 0.732169
	updateEmotionPointer()
	pass


func _on_btnSleepy_pressed():
	emotionPointer.x = 0.388506
	emotionPointer.y = 0.921446
	updateEmotionPointer()
	pass


func _on_btnBored_pressed():
	emotionPointer.x = -0.409406
	emotionPointer.y = 0.912353
	updateEmotionPointer()
	pass


func _on_btnDepressed_pressed():
	emotionPointer.x = -0.685301
	emotionPointer.y = 0.72826
	updateEmotionPointer()
	pass


func _on_btnSad_pressed():
	emotionPointer.x = -0.9601
	emotionPointer.y = 0.279658
	updateEmotionPointer()
	pass


func _on_btnDistressed_pressed():
	emotionPointer.x = -0.945209
	emotionPointer.y = -0.326466
	updateEmotionPointer()
	pass


func _on_btnAngry_pressed():
	emotionPointer.x = -0.780946
	emotionPointer.y = -0.624599
	updateEmotionPointer()
	pass


func _on_btnTense_pressed():
	emotionPointer.x = -0.392995
	emotionPointer.y = -0.919541
	updateEmotionPointer()
	pass

func emit_emotion_change():
	emit_signal(\"_on_emotion_pointer_change\", emotionPointer)
	pass
"

[sub_resource type="GDScript" id=7]
script/source = "extends Label

const TIMER_LIMIT = 1.0
var timer = 0.0

func _process(delta):
	timer += delta
	if timer > TIMER_LIMIT:
		timer = 0.0
		text = str(Engine.get_frames_per_second())
"

[sub_resource type="ViewportTexture" id=8]
viewport_path = NodePath("HSLTarget")

[sub_resource type="ShaderMaterial" id=9]
resource_local_to_scene = true
shader = ExtResource( 7 )
shader_param/screenSize = Vector2( 640, 480 )
shader_param/texHSL = SubResource( 8 )

[sub_resource type="ViewportTexture" id=10]
viewport_path = NodePath("HSLTarget")

[sub_resource type="ShaderMaterial" id=11]
resource_local_to_scene = true
shader = ExtResource( 8 )
shader_param/screenSize = Vector2( 640, 480 )
shader_param/texHSL = SubResource( 10 )

[sub_resource type="ShaderMaterial" id=12]
shader = ExtResource( 9 )

[sub_resource type="ViewportTexture" id=13]
viewport_path = NodePath("DefaultTarget")

[node name="Node2D" type="Node2D"]

[node name="PostProcessedScreenSprite" type="Sprite" parent="."]
material = SubResource( 3 )
texture = SubResource( 4 )
centered = false
script = SubResource( 5 )

[node name="Panel" type="Panel" parent="."]
margin_left = 423.122
margin_right = 639.122
margin_bottom = 480.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="emotionColors" type="Sprite" parent="Panel"]
position = Vector2( 109.669, 144.249 )
scale = Vector2( 0.264802, 0.264802 )
texture = ExtResource( 6 )
script = SubResource( 6 )

[node name="circle" type="Sprite" parent="Panel/emotionColors"]
scale = Vector2( 0.0201627, 0.0201627 )
texture = ExtResource( 4 )

[node name="btnExcited" type="Button" parent="Panel"]
margin_left = 26.706
margin_top = 235.809
margin_right = 99.706
margin_bottom = 259.809
rect_pivot_offset = Vector2( 36.5, 12 )
text = "Excited"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="btnDelighted" type="Button" parent="Panel"]
margin_left = 110.0
margin_top = 236.0
margin_right = 192.0
margin_bottom = 260.0
rect_pivot_offset = Vector2( 36.5, 12 )
text = "Delighted"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="btnHappy" type="Button" parent="Panel"]
margin_left = 26.7059
margin_top = 267.8
margin_right = 99.7059
margin_bottom = 291.8
rect_pivot_offset = Vector2( 36.5, 12 )
text = "Happy"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="btnContent" type="Button" parent="Panel"]
margin_left = 110.0
margin_top = 268.0
margin_right = 191.0
margin_bottom = 292.0
rect_pivot_offset = Vector2( 36.5, 12 )
text = "Content"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="btnCalm" type="Button" parent="Panel"]
margin_left = 26.706
margin_top = 300.912
margin_right = 99.706
margin_bottom = 324.912
rect_pivot_offset = Vector2( 36.5, 12 )
text = "Calm"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="btnSleepy" type="Button" parent="Panel"]
margin_left = 110.0
margin_top = 301.0
margin_right = 191.0
margin_bottom = 325.0
rect_pivot_offset = Vector2( 36.5, 12 )
text = "Sleepy"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="btnBored" type="Button" parent="Panel"]
margin_left = 26.7059
margin_top = 332.902
margin_right = 99.7059
margin_bottom = 356.902
rect_pivot_offset = Vector2( 36.5, 12 )
text = "Bored"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="btnDepressed" type="Button" parent="Panel"]
margin_left = 110.0
margin_top = 333.0
margin_right = 191.0
margin_bottom = 357.0
rect_pivot_offset = Vector2( 36.5, 12 )
text = "Depressed"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="btnSad" type="Button" parent="Panel"]
margin_left = 26.7375
margin_top = 364.893
margin_right = 99.7375
margin_bottom = 388.893
rect_pivot_offset = Vector2( 36.5, 12 )
text = "Sad"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="btnDistressed" type="Button" parent="Panel"]
margin_left = 110.329
margin_top = 364.893
margin_right = 191.329
margin_bottom = 388.893
rect_pivot_offset = Vector2( 36.5, 12 )
text = "Distressed"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="btnAngry" type="Button" parent="Panel"]
margin_left = 27.2671
margin_top = 396.883
margin_right = 100.267
margin_bottom = 420.883
rect_pivot_offset = Vector2( 36.5, 12 )
text = "Angry"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="btnTense" type="Button" parent="Panel"]
margin_left = 110.329
margin_top = 396.883
margin_right = 184.329
margin_bottom = 420.883
rect_pivot_offset = Vector2( 36.5, 12 )
text = "Tense"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="lblTitleFPS" type="Label" parent="Panel"]
margin_left = 56.5649
margin_top = 26.8787
margin_right = 110.565
margin_bottom = 40.8787
text = "FPS: "
align = 1
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="lblFPS" type="Label" parent="Panel"]
margin_left = 92.6274
margin_top = 26.8787
margin_right = 146.627
margin_bottom = 40.8787
text = "0"
align = 1
valign = 1
script = SubResource( 7 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="lblProportion" type="Label" parent="Panel"]
margin_left = 86.6124
margin_top = 214.429
margin_right = 126.612
margin_bottom = 228.429
text = "0"
align = 1

[node name="DefaultTarget" type="Viewport" parent="."]
size = Vector2( 640, 480 )
usage = 0
render_target_v_flip = true
render_target_update_mode = 3

[node name="Background" type="Sprite" parent="DefaultTarget"]
position = Vector2( 320, 240 )
scale = Vector2( 2.21034, 2.21034 )
texture = ExtResource( 1 )
region_enabled = true
region_rect = Rect2( 32, 464, 288, 208 )

[node name="HistoryTarget" type="Viewport" parent="."]
size = Vector2( 3, 2 )
usage = 0
render_target_v_flip = true
render_target_update_mode = 3

[node name="HRBGY" type="Sprite" parent="HistoryTarget"]
material = SubResource( 9 )
position = Vector2( 1, 1 )
texture = ExtResource( 3 )

[node name="HMC_SLM" type="Sprite" parent="HistoryTarget"]
material = SubResource( 11 )
position = Vector2( 2, 1 )
texture = ExtResource( 3 )

[node name="HSLTarget" type="Viewport" parent="."]
size = Vector2( 640, 480 )
usage = 0
render_target_v_flip = true
render_target_update_mode = 3

[node name="DefaultScreen" type="Sprite" parent="HSLTarget"]
material = SubResource( 12 )
texture = SubResource( 13 )
centered = false
[connection signal="pressed" from="Panel/btnExcited" to="Panel/emotionColors" method="_on_btnExcited_pressed"]
[connection signal="pressed" from="Panel/btnDelighted" to="Panel/emotionColors" method="_on_btnDelighted_pressed"]
[connection signal="pressed" from="Panel/btnHappy" to="Panel/emotionColors" method="_on_btnHappy_pressed"]
[connection signal="pressed" from="Panel/btnContent" to="Panel/emotionColors" method="_on_btnContent_pressed"]
[connection signal="pressed" from="Panel/btnCalm" to="Panel/emotionColors" method="_on_btnCalm_pressed"]
[connection signal="pressed" from="Panel/btnSleepy" to="Panel/emotionColors" method="_on_btnSleepy_pressed"]
[connection signal="pressed" from="Panel/btnBored" to="Panel/emotionColors" method="_on_btnBored_pressed"]
[connection signal="pressed" from="Panel/btnDepressed" to="Panel/emotionColors" method="_on_btnDepressed_pressed"]
[connection signal="pressed" from="Panel/btnSad" to="Panel/emotionColors" method="_on_btnSad_pressed"]
[connection signal="pressed" from="Panel/btnDistressed" to="Panel/emotionColors" method="_on_btnDistressed_pressed"]
[connection signal="pressed" from="Panel/btnAngry" to="Panel/emotionColors" method="_on_btnAngry_pressed"]
[connection signal="pressed" from="Panel/btnTense" to="Panel/emotionColors" method="_on_btnTense_pressed"]
